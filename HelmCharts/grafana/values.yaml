# Default values for grafana.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: monitoring
replicaCount: 1

labels:
  k8s-app: grafana
  app.kubernetes.io/name: grafana
  app.kubernetes.io/component: grafana

commonAnnotations:
  annotations: 
    prometheus.io/scrape: 'true'

image:
  repository: grafana/grafana
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 7.5.7

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


volumeMounts:
  - name: config
    mountPath: "/etc/grafana/"
  - name: dashboards
    mountPath: "/var/lib/grafana/dashboards"
  - name: datasources
    mountPath: "/etc/grafana/provisioning/datasources/"
  - name: dashboardproviders
    mountPath: "/etc/grafana/provisioning/dashboards/"
#  - name: grafana-data
#    mountPath: "/var/lib/grafana"

volumes:
  - name: config
    configMap:
      name: grafana-ini
  - name: datasources
    configMap:
      name: grafana-datasources
  - name: dashboardproviders
    configMap:
      name: grafana-dashboardproviders
  - name: dashboards
    configMap:
      name: dashboards

probs:
  readinessProbe:
    enabled: true
    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000
  livenessProbe:
    enabled: true
    livenessProbe:
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 30
      timeoutSeconds: 30
      failureThreshold: 10
      periodSeconds: 10




podAnnotations: {}

adminUser: YWRtaW4=
adminPassword: YWRtaW4=

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
